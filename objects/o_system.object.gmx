<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(1280,720);
display_reset(8,1);
titl = 0;
str = 0;
info = 1;
inpl = 0;
timer[0] = 0;
mode = 0;
mopl = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer[0] != 0)    {
    timer[0]--;
}
else    {
    randomize();
    instance_create(irandom_range(0,1280),0,o_snow);
    timer[0] = irandom_range(8,24);
}
if (inpl != info)    {
    inpl += (((info * 720) - inpl) / 8);
}
if (mopl != mode)    {
    mopl += (((mode * 720) - mopl) / 8);
}
if (!instance_exists(o_ice))    {
    mode = 1;
    info = 0;
}

if (!instance_exists(o_player))    {
    room_restart();
}
if (mouse_check_button_pressed(mb_left) &amp;&amp; info == 1 || keyboard_check_pressed(vk_enter) &amp;&amp; info == 1)    {
    info = 0;
}
if (mouse_check_button_pressed(mb_left) &amp;&amp; info == 1 || keyboard_check_pressed(vk_enter) &amp;&amp; mode == 1)    {
    mode = 0;
    info = 1;
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(0);
draw_set_colour(c_white);
draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
switch (room)    {
    case (0) :
        titl = "스테이지 1 - 1 : 새로운 시작";
        str = "프로그래밍부 부스에 방문해 주셔서 감사합니다!#방향키로 조작합니다.#스테이지 내에 배치된 얼음을 모두 떨어트려야#스테이지를 클리어할 수 있습니다.";
        break;
    case (1) :
        titl = "스테이지 1 - 2 : 밟고 올라서기";
        str = "뛰어넘기 어렵다고 판단된다면,#얼음 블럭을 잘 이용해 보십시오.";
        break;
    case (2) :
        titl = "스테이지 1 - 3 : 순서 정하기";
        str = "우선 순위를 잘 생각하십시오.";
        break;
    case (3) :
        titl = "스테이지 1 - 4 : 높이 뛰어오르기";
        str = "트램펄린 블럭 위에 올라가면 높이 점프합니다.";
        break;
    case (4) :
        titl = "스테이지 1 - 5 : 트램펄린 블럭 밀기";
        str = "얼음 트램펄린 블럭은 밀 수 있습니다.#얼음 트램펄린 블럭 또한 떨어트려야 합니다.";
        break;
    case (5) :
        titl = "스테이지 1 - 6 : 본격적인 시작";
        str = "이제부터 본격적인 시작입니다.#스테이지 내에 배치된 블럭들을 이용하여#스테이지를 클리어하십시오.";
        break;
    case (6) :
        titl = "스테이지 1 - 7 : 위험 요소";
        str = "스테이지 곳곳에 날카로운 칼날들이 배치됩니다. 조심하세요!";
        break;
    case (7) :
        titl = "스테이지 1 - 8 : 다시 돌아가기";
        str = "맵의 스케일이 작다고 해서 결코 쉬운 것이 아닙니다.";
        break;
}
if (inpl != 0)    {
    draw_set_colour(0);
    draw_set_alpha(inpl / 900);
    draw_rectangle(0,0,1280,inpl,0);
    draw_set_colour(c_white);
    draw_set_alpha(inpl / 900 + 0.2);
    draw_set_font(f_noto36);
    draw_text(640,inpl - 720 + 192,titl);
    draw_text(640,inpl - 192,"탭하여 시작하기");
    draw_set_font(f_noto24);
    draw_text(640,inpl - 360,str);
    draw_set_alpha(1);
}
if (mopl != 0)    {
    draw_set_colour(0);
    draw_set_alpha(mopl / 900);
    draw_rectangle(0,0,1280,mopl,0);
    draw_set_colour(c_white);
    draw_set_alpha(mopl / 900 + 0.2);
    draw_set_font(f_noto36);
    draw_text(640,mopl - 720 + 192,"스테이지 1 - " + string(room + 1) + "#스테이지 클리어!");
    
    draw_text(640,mopl - 192,"탭하여 계속하기");
    draw_set_font(f_noto24);
    draw_set_alpha(1);
}
/*if (room = r_title)    {
    draw_set_font(f_noto36);
    draw_text(640,360 - 128,"게임 클리어!");
    draw_set_font(f_noto24);
    draw_text(640,360 + 128,"플레이해주셔서 진심으로 감사드립니다.");
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
